name: Node.js CI/CD

on:
  push:
    branches: [ master ]
    tags:     [ appimage/v*, maker-types/v* ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x, latest]
    name:    Build and run tests (${{ github.ref }}#${{ matrix.node-version }})
    runs-on: ubuntu-latest
    steps:
      # Initialization
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install dependencies
        run:  npm ci
      # Build
      - name: Build project
        run:  npm run build
      # Test
      - name: Run tests with coverage+test reporting
        if:   ${{ matrix.node-version == 'latest' || matrix.node-version == '22.x' }}
        run: |
          npm run test:coverage -- --experimental-test-coverage \
            --test-reporter=spec --test-reporter-destination=stdout \
            --test-reporter=junit --test-reporter-destination=junit.xml
      - name: Upload coverage reports to Codecov
        if:   ${{ success() }}
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          name: "${{ github.ref_type }}#${{ matrix.node-version }}"
      - name: Upload test results to CodeCov
        if:   ${{ !cancelled() }}
        uses: codecov/test-results-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          name: "${{ github.ref_name }}#${{ matrix.node-version }}"
  publish:
    name:    Distribute ${{ github.ref_type }}
    runs-on: ubuntu-latest
    needs:   test
    permissions:
      contents: read
      id-token: write
    env:
      PUSH_PKG: ${{ startsWith(github.ref,'refs/tags/appimage/v') && 'maker-appimage' || startsWith(github.ref,'refs/tags/maker-types/v') && 'maker-types' || '' }}
    steps:
      # Initialization
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Node.js latest
        uses: actions/setup-node@v3
        with:
          node-version: latest
      - name: Install dependencies
        run:  npm ci
      # Create package & publish it as artifact for inspection
      - name: Create package tarball
        id:   pack
        run:  echo "meta=$(npm -w @reforged/$PUSH_PKG pack)" >> "$GITHUB_OUTPUT"
      - name: Upload package as artifact
        uses: actions/upload-artifact@v4
        env:
          test: "foo"
        with:
          name: reforged-$PUSH_PKG
          path: ${{ fromJson(steps.pack.outputs.meta)[0].filename }}
      # Publish to NPM (for tags)
      - name: Publish to NPM
        if:   ${{ github.ref_type == 'tag' }}
        run:  npm -w @reforged/$PUSH_PKG publish --provenance
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}